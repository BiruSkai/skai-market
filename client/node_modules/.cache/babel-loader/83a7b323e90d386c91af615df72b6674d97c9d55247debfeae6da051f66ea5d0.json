{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport apiAxios from \"../../config/axiosConfig\";\nexport const fetchAllMainAdvertisement = createAsyncThunk(\"fetchAllMainAdvertisement\", async () => {\n  const response = await apiAxios.get(\"/admin/advertisement\");\n  console.log(\"adSlice: \", response);\n  const adverstisement = {};\n  response.data.forEach(item => {\n    advertisement[item.id] = item;\n  });\n  return advertisement;\n});\nexport const advertisementSlice = createSlice({\n  name: \"adminMainAdvertisement\",\n  initialState: {\n    fetchAllMainAdvertisementStatus: \"idle\",\n    adminAllAdvertisement: {}\n  },\n  extraReducers: builder => {\n    // Reducers for fetching adminMainAdverstisement\n    builder.addCase(fetchAllMainAdvertisement.pending, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"loading\";\n    }).addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"succeeded\";\n      state.adminAllAdvertisement = action.payload;\n    }).addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"failed\";\n    });\n  }\n});\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement;\nconsole.log(\"admin-ctr: \", selectAdminAllAdvertisement);\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId];\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus;\nexport default advertisementSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiAxios","fetchAllMainAdvertisement","response","get","console","log","adverstisement","data","forEach","item","advertisement","id","advertisementSlice","name","initialState","fetchAllMainAdvertisementStatus","adminAllAdvertisement","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","selectAdminAllAdvertisement","adminMainAdvertisement","selectAdminAdvertisementById","advertisementId","selectFetchAdminAllAdvertisementStatus","reducer"],"sources":["D:/project coding 1.1.2024/FullStack/skai-market/client/src/features/admin/advertisementSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport apiAxios from \"../../config/axiosConfig\";\r\n\r\nexport const fetchAllMainAdvertisement = createAsyncThunk(\"fetchAllMainAdvertisement\", async () => {\r\n        const response = await apiAxios.get(\"/admin/advertisement\")\r\n        console.log(\"adSlice: \", response)\r\n        const adverstisement = {}\r\n        response.data.forEach(item => {\r\n                advertisement[item.id] = item\r\n        })\r\n        return advertisement\r\n})\r\n\r\nexport const advertisementSlice = createSlice({\r\n        name: \"adminMainAdvertisement\",\r\n        initialState: {\r\n                fetchAllMainAdvertisementStatus: \"idle\",\r\n                adminAllAdvertisement: {}\r\n        },\r\n        extraReducers: (builder) => {\r\n                // Reducers for fetching adminMainAdverstisement\r\n                builder\r\n                        .addCase(fetchAllMainAdvertisement.pending, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"loading\"\r\n                        })\r\n                        .addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"succeeded\"\r\n                                state.adminAllAdvertisement = action.payload\r\n                        })\r\n                        .addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"failed\"\r\n                        })\r\n        }\r\n})\r\n\r\n\r\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement\r\nconsole.log(\"admin-ctr: \", selectAdminAllAdvertisement)\r\n\r\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId]\r\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus\r\n\r\nexport default advertisementSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,0BAA0B;AAE/C,OAAO,MAAMC,yBAAyB,GAAGH,gBAAgB,CAAC,2BAA2B,EAAE,YAAY;EAC3F,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,sBAAsB,CAAC;EAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;EAClC,MAAMI,cAAc,GAAG,CAAC,CAAC;EACzBJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI;IACtBC,aAAa,CAACD,IAAI,CAACE,EAAE,CAAC,GAAGF,IAAI;EACrC,CAAC,CAAC;EACF,OAAOC,aAAa;AAC5B,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAGb,WAAW,CAAC;EACtCc,IAAI,EAAE,wBAAwB;EAC9BC,YAAY,EAAE;IACNC,+BAA+B,EAAE,MAAM;IACvCC,qBAAqB,EAAE,CAAC;EAChC,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACpB;IACAA,OAAO,CACEC,OAAO,CAAClB,yBAAyB,CAACmB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACN,+BAA+B,GAAG,SAAS;IACzD,CAAC,CAAC,CACDI,OAAO,CAAClB,yBAAyB,CAACsB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACN,+BAA+B,GAAG,WAAW;MACnDM,KAAK,CAACL,qBAAqB,GAAGM,MAAM,CAACE,OAAO;IACpD,CAAC,CAAC,CACDL,OAAO,CAAClB,yBAAyB,CAACwB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACN,+BAA+B,GAAG,QAAQ;IACxD,CAAC,CAAC;EAClB;AACR,CAAC,CAAC;AAGF,OAAO,MAAMW,2BAA2B,GAAGL,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACX,qBAAqB;AACtGZ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEqB,2BAA2B,CAAC;AAEvD,OAAO,MAAME,4BAA4B,GAAGA,CAACP,KAAK,EAAEQ,eAAe,KAAKR,KAAK,CAACM,sBAAsB,CAACX,qBAAqB,CAACa,eAAe,CAAC;AAC3I,OAAO,MAAMC,sCAAsC,GAAGT,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACZ,+BAA+B;AAE3H,eAAeH,kBAAkB,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}