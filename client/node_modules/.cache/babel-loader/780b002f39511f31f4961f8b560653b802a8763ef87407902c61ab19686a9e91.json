{"ast":null,"code":"var _jsxFileName = \"D:\\\\project coding 1.1.2024\\\\FullStack\\\\skai-market\\\\client\\\\src\\\\components\\\\login\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport apiAxios from \"../../config/axiosConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  var _formState$errors$ema, _formState$errors$pas, _formState$errors$add, _formState$errors$cou;\n  const [msg, setMsg] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm;\n  const onRegister = async data => {\n    try {\n      console.log(\"b1: \", data);\n      const response = await apiAxios.post(\"auth/register\", {\n        email: data.email,\n        password: data.password,\n        name: data.name,\n        address: data.address,\n        country: data.country\n      });\n      if (response.status === 200) {\n        console.log(\"register successful\");\n      }\n    } catch (error) {\n      const errorMsg = error.response.data.error ? error.response.data.errpr.message : \"Registration failed.\";\n      setMsg(errorMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-md py-5 d-flex align-items-center justify-content-center justify-content-lg-end\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-6 cold-lg-4 shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onRegister),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-floating my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              class: \"form-control\",\n              id: \"floatingInput\",\n              ...register(\"email\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"floatingInput\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 49\n            }, this), ((_formState$errors$ema = formState.errors.email) === null || _formState$errors$ema === void 0 ? void 0 : _formState$errors$ema.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note py-2\",\n              children: \"Email must be filled.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 97\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-floating\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              class: \"form-control\",\n              id: \"floatingPassword\",\n              ...register(\"password\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"floatingPassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 49\n            }, this), ((_formState$errors$pas = formState.errors.password) === null || _formState$errors$pas === void 0 ? void 0 : _formState$errors$pas.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note py-2\",\n              children: \"Password must be filled.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 100\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-floating my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              id: \"floatingInput\",\n              ...register(\"address\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"floatingInput\",\n              children: \"Living Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 49\n            }, this), ((_formState$errors$add = formState.errors.address) === null || _formState$errors$add === void 0 ? void 0 : _formState$errors$add.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note py-2\",\n              children: \"Living address must be filled.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-floating\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              id: \"floatingInput\",\n              ...register(\"country\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"floatingPassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 49\n            }, this), ((_formState$errors$cou = formState.errors.country) === null || _formState$errors$cou === void 0 ? void 0 : _formState$errors$cou.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note py-2\",\n              children: \"Country must be filled.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"p-2 btn btn-primary col-12\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), msg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }, this);\n};\n_s(Register, \"wu2AL+BGTOpSyXjhnKep6uRDvi4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useForm","apiAxios","jsxDEV","_jsxDEV","Register","_s","_formState$errors$ema","_formState$errors$pas","_formState$errors$add","_formState$errors$cou","msg","setMsg","register","handleSubmit","formState","onRegister","data","console","log","response","post","email","password","name","address","country","status","error","errorMsg","errpr","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","id","required","for","errors","_c","$RefreshReg$"],"sources":["D:/project coding 1.1.2024/FullStack/skai-market/client/src/components/login/Register.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport apiAxios from \"../../config/axiosConfig\"\r\n\r\n\r\nconst Register = () => {\r\n        const [msg, setMsg] = useState(\"\")\r\n        const { register, handleSubmit, formState} = useForm\r\n        \r\n        const onRegister = async (data) => {\r\n                try {\r\n                        console.log(\"b1: \", data)\r\n                        const response = await apiAxios.post(\r\n                                \"auth/register\",\r\n                                {\r\n                                        email: data.email,\r\n                                        password: data.password,\r\n                                        name: data.name,\r\n                                        address: data.address,\r\n                                        country: data.country\r\n                                }\r\n                        )\r\n                        if (response.status === 200) {\r\n                                console.log(\"register successful\")\r\n                        }\r\n                }\r\n                catch (error) {\r\n                        const errorMsg = error.response.data.error ? error.response.data.errpr.message : \"Registration failed.\"\r\n                        setMsg(errorMsg)\r\n                }\r\n        }\r\n\r\n        return ( \r\n                <div className=\"container-md py-5 d-flex align-items-center justify-content-center justify-content-lg-end\">\r\n                        <div className=\"card col-md-6 cold-lg-4 shadow\">\r\n                                <div className=\"card-body\">\r\n                                <h3>Register</h3>\r\n                                <form onSubmit={handleSubmit(onRegister)}>\r\n                                        <div class=\"form-floating my-3\">\r\n                                                <input type=\"email\" class=\"form-control\" id=\"floatingInput\" {...register(\"email\", {required:true})} />\r\n                                                <label for=\"floatingInput\">Email address</label>\r\n                                                {formState.errors.email?.type === \"required\" && <p className=\"note py-2\">Email must be filled.</p>}\r\n                                        </div>\r\n                                        <div class=\"form-floating\">\r\n                                                <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" {...register(\"password\", {required:true})} />\r\n                                                <label for=\"floatingPassword\">Password</label>\r\n                                                {formState.errors.password?.type === \"required\" && <p className=\"note py-2\">Password must be filled.</p>}\r\n                                        </div>\r\n                                        <div class=\"form-floating my-3\">\r\n                                                <input type=\"text\" class=\"form-control\" id=\"floatingInput\" {...register(\"address\", {required:true})} />\r\n                                                <label for=\"floatingInput\">Living Address</label>\r\n                                                {formState.errors.address?.type === \"required\" && <p className=\"note py-2\">Living address must be filled.</p>}\r\n                                        </div>\r\n                                        <div class=\"form-floating\">\r\n                                                <input type=\"text\" class=\"form-control\" id=\"floatingInput\" {...register(\"country\", {required:true})} />\r\n                                                <label for=\"floatingPassword\">Password</label>\r\n                                                {formState.errors.country?.type === \"required\" && <p className=\"note py-2\">Country must be filled.</p>}\r\n                                        </div>\r\n                                        <div class=\"my-3\">\r\n                                                <button class=\"p-2 btn btn-primary col-12\">Register</button>\r\n                                        </div>\r\n                                </form>                \r\n                                { msg }\r\n                                </div>\r\n                        </div>\r\n                        \r\n                </div>\r\n         );\r\n}\r\n \r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}