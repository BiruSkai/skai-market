{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport apiAxios from \"../../config/axiosConfig\";\nconst advertisementSlice = createSlice({\n  name: \"adminMainAdvertisement\",\n  initialState: {\n    fetchAllMainAdvertisementStatus: \"idle\",\n    adminAllAdvertisement: {}\n  },\n  // extraReducers: (builder) => {\n  //         // Reducers for fetching adminMainAdverstisement\n\n  //         builder\n  //                 .addCase(fetchAllMainAdvertisement.pending, (state, action) => {\n  //                         state.fetchAllMainAdvertisementStatus = \"loading\"\n  //                 })\n  //                 .addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\n  //                         state.fetchAllMainAdvertisementStatus = \"succeeded\"\n  //                         state.adminAllAdvertisement = action.payload\n  //                         console.log(state.adminAllAdvertisement)\n  //                 })\n  //                 .addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\n  //                         state.fetchAllMainAdvertisementStatus = \"failed\"\n  //                 })\n  // }\n\n  reducers: create => ({\n    fetchAllMainAdvertisement: createsyncThunk(async () => {\n      const response = await apiAxios.get(\"/admin/advertisement\");\n      console.log(\"adSlice: \", response);\n      const advertisement = {};\n      response.data.forEach(item => {\n        advertisement[item.id] = item;\n      });\n      return advertisement;\n    }, {\n      pending: state => {\n        state.fetchAllMainAdvertisementStatus = \"loading\";\n      },\n      rejected: state => {\n        state.fetchAllMainAdvertisementStatus = \"failed\";\n      },\n      fulfilled: (state, action) => {\n        state.fetchAllMainAdvertisementStatus = \"succeeded\";\n        state.adminAllAdvertisement = action.payload;\n      }\n    })\n  })\n});\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement;\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId];\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus;\nexport default advertisementSlice.reducer;\nexport const {\n  fetchAllMainAdvertisement\n} = advertisementSlice.actions;\nconsole.log(\"adSlice \", fetchAllMainAdvertisement);","map":{"version":3,"names":["createSlice","apiAxios","advertisementSlice","name","initialState","fetchAllMainAdvertisementStatus","adminAllAdvertisement","reducers","create","fetchAllMainAdvertisement","createsyncThunk","response","get","console","log","advertisement","data","forEach","item","id","pending","state","rejected","fulfilled","action","payload","selectAdminAllAdvertisement","adminMainAdvertisement","selectAdminAdvertisementById","advertisementId","selectFetchAdminAllAdvertisementStatus","reducer","actions"],"sources":["D:/project coding 1.1.2024/FullStack/skai-market/client/src/features/admin/advertisementSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport apiAxios from \"../../config/axiosConfig\";\r\n\r\n\r\n\r\nconst advertisementSlice = createSlice({\r\n        name: \"adminMainAdvertisement\",\r\n        initialState: {\r\n                fetchAllMainAdvertisementStatus: \"idle\",\r\n                adminAllAdvertisement: {}\r\n        },\r\n        // extraReducers: (builder) => {\r\n        //         // Reducers for fetching adminMainAdverstisement\r\n                \r\n        //         builder\r\n        //                 .addCase(fetchAllMainAdvertisement.pending, (state, action) => {\r\n        //                         state.fetchAllMainAdvertisementStatus = \"loading\"\r\n        //                 })\r\n        //                 .addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\r\n        //                         state.fetchAllMainAdvertisementStatus = \"succeeded\"\r\n        //                         state.adminAllAdvertisement = action.payload\r\n        //                         console.log(state.adminAllAdvertisement)\r\n        //                 })\r\n        //                 .addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\r\n        //                         state.fetchAllMainAdvertisementStatus = \"failed\"\r\n        //                 })\r\n        // }\r\n\r\n        reducers: (create) => ({\r\n                fetchAllMainAdvertisement: createsyncThunk(\r\n                        async () => {\r\n        \r\n                                const response = await apiAxios.get(\"/admin/advertisement\")\r\n                                console.log(\"adSlice: \", response)\r\n                                const advertisement = {}\r\n                                response.data.forEach(item => {\r\n                                        advertisement[item.id] = item\r\n                                })\r\n                                \r\n                                return advertisement\r\n                        },\r\n                        {\r\n                                pending: (state) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"loading\"\r\n                                },\r\n                                rejected: (state) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"failed\"\r\n                                },\r\n                                fulfilled: (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"succeeded\"\r\n                                state.adminAllAdvertisement = action.payload\r\n                                },\r\n                        }\r\n                )\r\n        })\r\n})\r\n\r\n\r\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement\r\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId]\r\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus\r\n\r\nexport default advertisementSlice.reducer\r\n\r\nexport const { fetchAllMainAdvertisement } = advertisementSlice.actions\r\nconsole.log(\"adSlice \", fetchAllMainAdvertisement)\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,0BAA0B;AAI/C,MAAMC,kBAAkB,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,wBAAwB;EAC9BC,YAAY,EAAE;IACNC,+BAA+B,EAAE,MAAM;IACvCC,qBAAqB,EAAE,CAAC;EAChC,CAAC;EACD;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,QAAQ,EAAGC,MAAM,KAAM;IACfC,yBAAyB,EAAEC,eAAe,CAClC,YAAY;MAEJ,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,GAAG,CAAC,sBAAsB,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;MAClC,MAAMI,aAAa,GAAG,CAAC,CAAC;MACxBJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI;QACtBH,aAAa,CAACG,IAAI,CAACC,EAAE,CAAC,GAAGD,IAAI;MACrC,CAAC,CAAC;MAEF,OAAOH,aAAa;IAC5B,CAAC,EACD;MACQK,OAAO,EAAGC,KAAK,IAAK;QACpBA,KAAK,CAAChB,+BAA+B,GAAG,SAAS;MACjD,CAAC;MACDiB,QAAQ,EAAGD,KAAK,IAAK;QACrBA,KAAK,CAAChB,+BAA+B,GAAG,QAAQ;MAChD,CAAC;MACDkB,SAAS,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;QAC9BH,KAAK,CAAChB,+BAA+B,GAAG,WAAW;QACnDgB,KAAK,CAACf,qBAAqB,GAAGkB,MAAM,CAACC,OAAO;MAC5C;IACR,CACR;EACR,CAAC;AACT,CAAC,CAAC;AAGF,OAAO,MAAMC,2BAA2B,GAAGL,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACrB,qBAAqB;AACtG,OAAO,MAAMsB,4BAA4B,GAAGA,CAACP,KAAK,EAAEQ,eAAe,KAAKR,KAAK,CAACM,sBAAsB,CAACrB,qBAAqB,CAACuB,eAAe,CAAC;AAC3I,OAAO,MAAMC,sCAAsC,GAAGT,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACtB,+BAA+B;AAE3H,eAAeH,kBAAkB,CAAC6B,OAAO;AAEzC,OAAO,MAAM;EAAEtB;AAA0B,CAAC,GAAGP,kBAAkB,CAAC8B,OAAO;AACvEnB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,yBAAyB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}