{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport apiAxios from \"../../config/axiosConfig\";\nexport const fetchAllMainAdvertisement = createAsyncThunk(\"admin/fetchAllMainAdvertisement\", async () => {\n  const response = await apiAxios.get(\"/admin/advertisement\");\n  console.log(\"adSlice: \", response);\n  const advertisement = {};\n  response.data.forEach(item => {\n    advertisement[item.id] = item;\n  });\n  return advertisement;\n});\nconst advertisementSlice = createSlice({\n  name: \"admin\",\n  initialState: {\n    fetchAllMainAdvertisementStatus: \"idle\",\n    adminAllAdvertisement: {}\n  },\n  extraReducers: builder => {\n    // Reducers for fetching adminMainAdverstisement\n\n    builder.addCase(fetchAllMainAdvertisement.pending, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"loading\";\n    }).addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"succeeded\";\n      state.adminAllAdvertisement = action.payload;\n      console.log(state.adminAllAdvertisement);\n    }).addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\n      state.fetchAllMainAdvertisementStatus = \"failed\";\n    });\n  }\n});\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement;\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId];\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus;\nexport default advertisementSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apiAxios","fetchAllMainAdvertisement","response","get","console","log","advertisement","data","forEach","item","id","advertisementSlice","name","initialState","fetchAllMainAdvertisementStatus","adminAllAdvertisement","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","selectAdminAllAdvertisement","adminMainAdvertisement","selectAdminAdvertisementById","advertisementId","selectFetchAdminAllAdvertisementStatus","reducer"],"sources":["D:/project coding 1.1.2024/FullStack/skai-market/client/src/features/admin/advertisementSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport apiAxios from \"../../config/axiosConfig\";\r\n\r\n\r\n\r\nexport const fetchAllMainAdvertisement= createAsyncThunk(\"admin/fetchAllMainAdvertisement\", async () => {\r\n        const response = await apiAxios.get(\"/admin/advertisement\")\r\n        console.log(\"adSlice: \", response)\r\n        const advertisement = {}\r\n        response.data.forEach(item => {\r\n                advertisement[item.id] = item\r\n        })\r\n        \r\n        return advertisement\r\n})\r\n\r\nconst advertisementSlice = createSlice({\r\n        name: \"admin\",\r\n        initialState: {\r\n                fetchAllMainAdvertisementStatus: \"idle\",\r\n                adminAllAdvertisement: {}\r\n        },\r\n        extraReducers: (builder) => {\r\n                // Reducers for fetching adminMainAdverstisement\r\n                \r\n                builder\r\n                        .addCase(fetchAllMainAdvertisement.pending, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"loading\"\r\n                        })\r\n                        .addCase(fetchAllMainAdvertisement.fulfilled, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"succeeded\"\r\n                                state.adminAllAdvertisement = action.payload\r\n                                console.log(state.adminAllAdvertisement)\r\n                        })\r\n                        .addCase(fetchAllMainAdvertisement.rejected, (state, action) => {\r\n                                state.fetchAllMainAdvertisementStatus = \"failed\"\r\n                        })\r\n        }\r\n})\r\n\r\n\r\nexport const selectAdminAllAdvertisement = state => state.adminMainAdvertisement.adminAllAdvertisement\r\nexport const selectAdminAdvertisementById = (state, advertisementId) => state.adminMainAdvertisement.adminAllAdvertisement[advertisementId]\r\nexport const selectFetchAdminAllAdvertisementStatus = state => state.adminMainAdvertisement.fetchAllMainAdvertisementStatus\r\n\r\nexport default advertisementSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,0BAA0B;AAI/C,OAAO,MAAMC,yBAAyB,GAAEF,gBAAgB,CAAC,iCAAiC,EAAE,YAAY;EAChG,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,sBAAsB,CAAC;EAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;EAClC,MAAMI,aAAa,GAAG,CAAC,CAAC;EACxBJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI;IACtBH,aAAa,CAACG,IAAI,CAACC,EAAE,CAAC,GAAGD,IAAI;EACrC,CAAC,CAAC;EAEF,OAAOH,aAAa;AAC5B,CAAC,CAAC;AAEF,MAAMK,kBAAkB,GAAGb,WAAW,CAAC;EAC/Bc,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACNC,+BAA+B,EAAE,MAAM;IACvCC,qBAAqB,EAAE,CAAC;EAChC,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACpB;;IAEAA,OAAO,CACEC,OAAO,CAACjB,yBAAyB,CAACkB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACN,+BAA+B,GAAG,SAAS;IACzD,CAAC,CAAC,CACDI,OAAO,CAACjB,yBAAyB,CAACqB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACN,+BAA+B,GAAG,WAAW;MACnDM,KAAK,CAACL,qBAAqB,GAAGM,MAAM,CAACE,OAAO;MAC5CnB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACL,qBAAqB,CAAC;IAChD,CAAC,CAAC,CACDG,OAAO,CAACjB,yBAAyB,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACN,+BAA+B,GAAG,QAAQ;IACxD,CAAC,CAAC;EAClB;AACR,CAAC,CAAC;AAGF,OAAO,MAAMW,2BAA2B,GAAGL,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACX,qBAAqB;AACtG,OAAO,MAAMY,4BAA4B,GAAGA,CAACP,KAAK,EAAEQ,eAAe,KAAKR,KAAK,CAACM,sBAAsB,CAACX,qBAAqB,CAACa,eAAe,CAAC;AAC3I,OAAO,MAAMC,sCAAsC,GAAGT,KAAK,IAAIA,KAAK,CAACM,sBAAsB,CAACZ,+BAA+B;AAE3H,eAAeH,kBAAkB,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}